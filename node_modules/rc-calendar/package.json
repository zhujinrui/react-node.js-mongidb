{
  "_args": [
    [
      {
        "raw": "rc-calendar@~9.0.0",
        "scope": null,
        "escapedName": "rc-calendar",
        "name": "rc-calendar",
        "rawSpec": "~9.0.0",
        "spec": ">=9.0.0 <9.1.0",
        "type": "range"
      },
      "F:\\React\\react-node.js-mongidb\\node_modules\\antd"
    ]
  ],
  "_from": "rc-calendar@>=9.0.0 <9.1.0",
  "_id": "rc-calendar@9.0.4",
  "_inCache": true,
  "_location": "/rc-calendar",
  "_nodeVersion": "8.1.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/rc-calendar-9.0.4.tgz_1505871984772_0.2988170424941927"
  },
  "_npmUser": {
    "name": "benjycui",
    "email": "benjytrys@gmail.com"
  },
  "_npmVersion": "5.0.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "rc-calendar@~9.0.0",
    "scope": null,
    "escapedName": "rc-calendar",
    "name": "rc-calendar",
    "rawSpec": "~9.0.0",
    "spec": ">=9.0.0 <9.1.0",
    "type": "range"
  },
  "_requiredBy": [
    "/antd"
  ],
  "_resolved": "https://registry.npmjs.org/rc-calendar/-/rc-calendar-9.0.4.tgz",
  "_shasum": "35810a8df6428f4fb85e8debdb07bd8d2eb3c5f5",
  "_shrinkwrap": null,
  "_spec": "rc-calendar@~9.0.0",
  "_where": "F:\\React\\react-node.js-mongidb\\node_modules\\antd",
  "author": {
    "name": "yiminghe@gmail.com"
  },
  "bugs": {
    "url": "http://github.com/react-component/calendar/issues"
  },
  "config": {
    "port": 8002
  },
  "dependencies": {
    "babel-runtime": "6.x",
    "classnames": "2.x",
    "create-react-class": "^15.5.2",
    "moment": "2.x",
    "prop-types": "^15.5.8",
    "rc-trigger": "1.x",
    "rc-util": "^4.0.4"
  },
  "description": "React Calendar",
  "devDependencies": {
    "async": "~2.5.0",
    "bootstrap": "~3.3.2",
    "coveralls": "^2.11.15",
    "enzyme": "^2.8.0",
    "enzyme-to-json": "^1.5.0",
    "jest": "^20.0.4",
    "mockdate": "^2.0.1",
    "pre-commit": "1.x",
    "rc-dialog": "^6.0.1",
    "rc-select": "^6.0.6",
    "rc-time-picker": "2.x",
    "rc-tools": "^6.2.2",
    "react": "15.x",
    "react-dom": "15.x",
    "react-test-renderer": "15.x"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-Ut/QLqkm8QfnomyOduQxb8XEz84Dgrk0H2nmuhWbNNQ5ReoK6ZbFzbyjHAECeIHslL19PxU7aE/8A/MOOCxITw==",
    "shasum": "35810a8df6428f4fb85e8debdb07bd8d2eb3c5f5",
    "tarball": "https://registry.npmjs.org/rc-calendar/-/rc-calendar-9.0.4.tgz"
  },
  "entry": {
    "rc-calendar": [
      "./assets/index.less",
      "./src/index.js"
    ]
  },
  "files": [
    "lib",
    "es",
    "assets/*.css",
    "dist"
  ],
  "gitHead": "e5f3dd770b901165c4bec4ba622c1949ad5b1f9a",
  "homepage": "http://github.com/react-component/calendar",
  "jest": {
    "collectCoverageFrom": [
      "src/*"
    ],
    "setupFiles": [
      "./tests/setup.js"
    ],
    "transform": {
      "\\.jsx?$": "./node_modules/rc-tools/scripts/jestPreprocessor.js"
    }
  },
  "keywords": [
    "react",
    "react-calendar",
    "react-component",
    "calendar",
    "ui component",
    "ui",
    "component"
  ],
  "licenses": "MIT",
  "main": "lib/index",
  "maintainers": [
    {
      "name": "paranoidjk",
      "email": "hust2012jiangkai@gmail.com"
    },
    {
      "name": "benjycui",
      "email": "benjytrys@gmail.com"
    },
    {
      "name": "yiminghe",
      "email": "yiminghe@gmail.com"
    }
  ],
  "module": "es/index",
  "name": "rc-calendar",
  "optionalDependencies": {},
  "pre-commit": [
    "lint"
  ],
  "readme": "# rc-calendar\n---\n\nReact Calendar\n\n[![NPM version][npm-image]][npm-url]\n[![build status][travis-image]][travis-url]\n[![Test coverage][coveralls-image]][coveralls-url]\n[![gemnasium deps][gemnasium-image]][gemnasium-url]\n[![npm download][download-image]][download-url]\n\n[npm-image]: http://img.shields.io/npm/v/rc-calendar.svg?style=flat-square\n[npm-url]: http://npmjs.org/package/rc-calendar\n[travis-image]: https://img.shields.io/travis/react-component/calendar.svg?style=flat-square\n[travis-url]: https://travis-ci.org/react-component/calendar\n[coveralls-image]: https://img.shields.io/coveralls/react-component/calendar.svg?style=flat-square\n[coveralls-url]: https://coveralls.io/r/react-component/calendar?branch=master\n[gemnasium-image]: http://img.shields.io/gemnasium/react-component/calendar.svg?style=flat-square\n[gemnasium-url]: https://gemnasium.com/react-component/calendar\n[node-image]: https://img.shields.io/badge/node.js-%3E=_0.10-green.svg?style=flat-square\n[node-url]: http://nodejs.org/download/\n[download-image]: https://img.shields.io/npm/dm/rc-calendar.svg?style=flat-square\n[download-url]: https://npmjs.org/package/rc-calendar\n\n## Screenshots\n\n<img src=\"https://img.alicdn.com/tps/TB1mYC8KVXXXXaHXXXXXXXXXXXX-566-678.png\" width=\"288\"/>\n\n<img src=\"https://img.alicdn.com/tps/TB1KW1HKVXXXXa9aXXXXXXXXXXX-578-694.png\" width=\"288\"/>\n\n<img src=\"https://img.alicdn.com/tps/TB1QYqPKVXXXXasXVXXXXXXXXXX-1196-712.png\" width=\"288\"/>\n\n<img src=\"https://img.alicdn.com/tps/TB1nAGDKVXXXXXvapXXXXXXXXXX-1206-730.png\" width=\"500\"/>\n\n## Feature\n\n* support ie9,ie9+,chrome,firefox,safari\n* support date, month, year, decade select panel\n* support week number\n* support en_US and zh_CN locale(UI), use moment.utcOffset to set timezone\n* support aria and keyboard accessibility\n\n### Keyboard\n\n* Previous month (PageUp)\n* Next month (PageDown)\n* tab into hour input: Last hour(Up), Next hour(Down)\n* tab into hour input: Last minute(Up), Next minute(Down)\n* tab into hour input: Last second(Up), Next second(Down)\n* Last year (Control + left)\n* Next year (Control + right)\n\n## install\n\n[![rc-calendar](https://nodei.co/npm/rc-calendar.png)](https://npmjs.org/package/rc-calendar)\n\n## Usage\n\n```js\nimport Calendar from 'rc-calendar';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nReactDOM.render(<Calendar />, container);\n```\n\n## Development\n\n```\nnpm install\nnpm start\n```\n\n## Example\n\nhttp://localhost:8002/examples/\n\nonline example:\n\nhttp://react-component.github.io/calendar/examples/index.html\n\n## API\n\n### rc-calendar props\n\n<table class=\"table table-bordered table-striped\">\n    <thead>\n    <tr>\n        <th style=\"width: 100px;\">name</th>\n        <th style=\"width: 50px;\">type</th>\n        <th style=\"width: 50px;\">default</th>\n        <th>description</th>\n    </tr>\n    </thead>\n    <tbody>\n        <tr>\n          <td>prefixCls</td>\n          <td>String</td>\n          <td></td>\n          <td>prefixCls of this component</td>\n        </tr>\n        <tr>\n          <td>className</td>\n          <td>String</td>\n          <td></td>\n          <td>additional css class of root dom node</td>\n        </tr>\n        <tr>\n          <td>style</td>\n          <td>Object</td>\n          <td></td>\n          <td>additional style of root dom node</td>\n        </tr>\n        <tr>\n          <td>dateRender</td>\n          <td>(current, value) => React.Node</td>\n          <td></td>\n          <td>date cell</td>\n        </tr>\n        <tr>\n          <td>renderSidebar</td>\n          <td>() => React.Node</td>\n          <td></td>\n          <td>side bar</td>\n        </tr>\n        <tr>\n          <td>renderFooter</td>\n          <td>() => React.Node</td>\n          <td></td>\n          <td>extra footer</td>\n        </tr>\n        <tr>\n          <td>value</td>\n          <td>moment</td>\n          <td></td>\n          <td>current value like input's value</td>\n        </tr>\n        <tr>\n          <td>defaultValue</td>\n          <td>moment</td>\n          <td></td>\n          <td>defaultValue like input's defaultValue</td>\n        </tr>\n        <tr>\n          <td>locale</td>\n          <td>Object</td>\n          <td>import from 'rc-calendar/lib/locale/en_US'</td>\n          <td>calendar locale</td>\n        </tr>\n        <tr>\n          <td>format</td>\n          <td>String</td>\n          <td>depends on whether you set timePicker and your locale</td>\n          <td>use to format/parse date(without time) value to/from input</td>\n        </tr>\n        <tr>\n          <td>disabledDate</td>\n          <td>Function(current:moment):Boolean</td>\n          <td></td>\n          <td>whether to disable select of current date</td>\n        </tr>\n        <tr>\n          <td>disabledTime</td>\n          <td>Function(current:moment):Object</td>\n          <td></td>\n          <td>a function which return a object with member of disabledHours/disabledMinutes/disabledSeconds according to rc-time-picker</td>\n        </tr>\n        <tr>\n          <td>showDateInput</td>\n          <td>Boolean</td>\n          <td>true</td>\n          <td>whether to show input on top of calendar panel</td>\n        </tr>\n        <tr>\n          <td>showWeekNumber</td>\n          <td>Boolean</td>\n          <td>false</td>\n          <td>whether to show week number of year</td>\n        </tr>\n        <tr>\n          <td>showToday</td>\n          <td>Boolean</td>\n          <td>true</td>\n          <td>whether to show today button</td>\n        </tr>\n        <tr>\n          <td>showOk</td>\n          <td>Boolean</td>\n          <td>auto</td>\n          <td>whether has ok button in footer</td>\n        </tr>\n        <tr>\n          <td>timePicker</td>\n          <td>React Element</td>\n          <td></td>\n          <td>rc-timer-picker/lib/module/panel element</td>\n        </tr>\n        <tr>\n          <td>onSelect</td>\n          <td>Function(date: moment)</td>\n          <td></td>\n          <td>called when a date is selected from calendar</td>\n        </tr>\n        <tr>\n          <td>onChange</td>\n          <td>Function(date: moment)</td>\n          <td></td>\n          <td>called when a date is changed inside calendar (next year/next month/keyboard)</td>\n        </tr>\n        <tr>\n          <td>dateInputPlaceholder</td>\n          <td>String</td>\n          <td></td>\n          <td>date input's placeholder</td>\n        </tr>\n    </tbody>\n</table>\n\n\n### rc-calendar/lib/RangeCalendar props\n\n<table class=\"table table-bordered table-striped\">\n    <thead>\n    <tr>\n        <th style=\"width: 100px;\">name</th>\n        <th style=\"width: 50px;\">type</th>\n        <th style=\"width: 50px;\">default</th>\n        <th>description</th>\n    </tr>\n    </thead>\n    <tbody>\n        <tr>\n          <td>prefixCls</td>\n          <td>String</td>\n          <td></td>\n          <td>prefixCls of this component</td>\n        </tr>\n        <tr>\n          <td>className</td>\n          <td>String</td>\n          <td></td>\n          <td>additional css class of root dom node</td>\n        </tr>\n        <tr>\n          <td>style</td>\n          <td>Object</td>\n          <td></td>\n          <td>additional style of root dom node</td>\n        </tr>\n        <tr>\n          <td>renderSidebar</td>\n          <td>() => React.Node</td>\n          <td></td>\n          <td>side bar</td>\n        </tr>\n        <tr>\n          <td>renderFooter</td>\n          <td>() => React.Node</td>\n          <td></td>\n          <td>extra footer</td>\n        </tr>\n        <tr>\n          <td>selectedValue</td>\n          <td>moment[]</td>\n          <td></td>\n          <td>current selected value range. with two elements.</td>\n        </tr>\n        <tr>\n          <td>defaultSelectedValue</td>\n          <td>moment[]</td>\n          <td></td>\n          <td>default selected value range</td>\n        </tr>\n        <tr>\n          <td>locale</td>\n          <td>Object</td>\n          <td>import from 'rc-calendar/lib/locale/en_US'</td>\n          <td>calendar locale</td>\n        </tr>\n        <tr>\n          <td>format</td>\n          <td>String</td>\n          <td>depends on whether you set timePicker and your locale</td>\n          <td>use to format/parse date(without time) value to/from input</td>\n        </tr>\n        <tr>\n          <td>disabledDate</td>\n          <td>Function(current:moment):Boolean</td>\n          <td></td>\n          <td>whether to disable select of current date</td>\n        </tr>\n        <tr>\n          <td>showWeekNumber</td>\n          <td>Boolean</td>\n          <td>false</td>\n          <td>whether to show week number of year</td>\n        </tr>\n        <tr>\n          <td>showToday</td>\n          <td>Boolean</td>\n          <td>true</td>\n          <td>whether to show today button</td>\n        </tr>\n        <tr>\n          <td>showOk</td>\n          <td>Boolean</td>\n          <td>auto</td>\n          <td>whether has ok button in footer</td>\n        </tr>\n        <tr>\n          <td>showClear</td>\n          <td>Boolean</td>\n          <td>false</td>\n          <td>whether has clear button in header</td>\n        </tr>\n        <tr>\n          <td>timePicker</td>\n          <td>React Element</td>\n          <td></td>\n          <td>rc-timer-picker/lib/module/panel element</td>\n        </tr>\n        <tr>\n          <td>onSelect</td>\n          <td>Function(date: moment[])</td>\n          <td></td>\n          <td>called when a date range is selected from calendar</td>\n        </tr>\n        <tr>\n          <td>onChange</td>\n          <td>Function(date: moment[])</td>\n          <td></td>\n          <td>called when a date range is changed inside calendar (next year/next month/keyboard)</td>\n        </tr>\n        <tr>\n          <td>dateInputPlaceholder</td>\n          <td>String[]</td>\n          <td></td>\n          <td>range date input's placeholders</td>\n        </tr>\n        <tr>\n          <td>disabledTime</td>\n          <td>Function(current: moment[], type:'start'|'end'):Object</td>\n          <td></td>\n          <td>a function which return a object with member of disabledHours/disabledMinutes/disabledSeconds according to rc-time-picker</td>\n        </tr>\n        <tr>\n          <td>type</td>\n          <td>enum('both','start', 'end')</td>\n          <td>both</td>\n          <td>whether fix start or end selected value. check start-end-range example</td>\n        </tr>\n    </tbody>\n</table>\n\n### rc-calendar/lib/MonthCalendar props\n\n<table class=\"table table-bordered table-striped\">\n    <thead>\n    <tr>\n        <th style=\"width: 100px;\">name</th>\n        <th style=\"width: 50px;\">type</th>\n        <th style=\"width: 50px;\">default</th>\n        <th>description</th>\n    </tr>\n    </thead>\n    <tbody>\n        <tr>\n          <td>prefixCls</td>\n          <td>String</td>\n          <td></td>\n          <td>prefixCls of this component</td>\n        </tr>\n        <tr>\n          <td>className</td>\n          <td>String</td>\n          <td></td>\n          <td>additional css class of root dom node</td>\n        </tr>\n        <tr>\n          <td>style</td>\n          <td>Object</td>\n          <td></td>\n          <td>additional style of root dom node</td>\n        </tr>\n        <tr>\n          <td>value</td>\n          <td>moment</td>\n          <td></td>\n          <td>current value like input's value</td>\n        </tr>\n        <tr>\n          <td>defaultValue</td>\n          <td>moment</td>\n          <td></td>\n          <td>defaultValue like input's defaultValue</td>\n        </tr>\n        <tr>\n          <td>locale</td>\n          <td>Object</td>\n          <td>import from 'rc-calendar/lib/locale/en_US'</td>\n          <td>calendar locale</td>\n        </tr>\n        <tr>\n          <td>disabledDate</td>\n          <td>Function(current:moment):Boolean</td>\n          <td></td>\n          <td>whether to disable select of current month</td>\n        </tr>\n        <tr>\n          <td>onSelect</td>\n          <td>Function(date: moment)</td>\n          <td></td>\n          <td>called when a date is selected from calendar</td>\n        </tr>\n        <tr>\n          <td>monthCellRender</td>\n          <td>function</td>\n          <td></td>\n          <td>Custom month cell render method</td>\n        </tr>\n        <tr>\n          <td>dateCellRender</td>\n          <td>function</td>\n          <td></td>\n          <td>Custom date cell render method</td>\n        </tr>\n        <tr>\n          <td>monthCellContentRender</td>\n          <td>function</td>\n          <td></td>\n          <td>Custom month cell content render method,the content will be appended to the cell.</td>\n        </tr>\n        <tr>\n        <tr>\n          <td>onChange</td>\n          <td>Function(date: moment)</td>\n          <td></td>\n          <td>called when a date is changed inside calendar (next year/next month/keyboard)</td>\n        </tr>\n    </tbody>\n</table>\n\n### rc-calendar/lib/Picker props\n\n<table class=\"table table-bordered table-striped\">\n    <thead>\n    <tr>\n        <th style=\"width: 100px;\">name</th>\n        <th style=\"width: 50px;\">type</th>\n        <th style=\"width: 50px;\">default</th>\n        <th>description</th>\n    </tr>\n    </thead>\n    <tbody>\n        <tr>\n          <td>prefixCls</td>\n          <td>String</td>\n          <td></td>\n          <td>prefixCls of this component</td>\n        </tr>\n        <tr>\n          <td>calendar</td>\n          <td>Calendar React Element</td>\n          <td></td>\n          <td></td>\n        </tr>\n        <tr>\n          <td>disabled</td>\n          <td>Boolean</td>\n          <td></td>\n          <td>whether picker is disabled</td>\n        </tr>\n        <tr>\n          <td>placement</td>\n          <td>String|Object</td>\n          <td></td>\n          <td>one of ['left','right','top','bottom', 'topLeft', 'topRight', 'bottomLeft', 'bottomRight']</td>\n        </tr>\n        <tr>\n          <td>align</td>\n          <td>Object: alignConfig of [dom-align](https://github.com/yiminghe/dom-align)</td>\n          <td></td>\n          <td>value will be merged into placement's align config.</td>\n        </tr>\n        <tr>\n          <td>animation</td>\n          <td>String</td>\n          <td></td>\n          <td>index.css support 'slide-up'</td>\n        </tr>\n        <tr>\n          <td>transitionName</td>\n          <td>String</td>\n          <td></td>\n          <td>css class for animation</td>\n        </tr>\n        <tr>\n          <td>value</td>\n          <td>moment|moment[]</td>\n          <td></td>\n          <td>current value like input's value</td>\n        </tr>\n        <tr>\n          <td>defaultValue</td>\n          <td>moment|moment[]</td>\n          <td></td>\n          <td>defaultValue like input's defaultValue</td>\n        </tr>\n        <tr>\n          <td>onChange</td>\n          <td>Function</td>\n          <td></td>\n          <td>called when select a different value</td>\n        </tr>\n        <tr>\n          <td>onOpenChange</td>\n          <td>(open:boolean) => void</td>\n          <td></td>\n          <td>called when open/close picker</td>\n        </tr>\n        <tr>\n          <td>open</td>\n          <td>Boolean</td>\n          <td></td>\n          <td>current open state of picker. controlled prop</td>\n        </tr>\n        <tr>\n          <td>getCalendarContainer</td>\n          <td>() => HTMLElement</td>\n          <td>() => {return document.body;}</td>\n          <td>dom node where calendar to be rendered into</td>\n        </tr>\n    </tbody>\n</table>\n\n### rc-calendar/lib/FullCalendar props\n\n<table class=\"table table-bordered table-striped\">\n    <thead>\n    <tr>\n        <th style=\"width: 100px;\">name</th>\n        <th style=\"width: 50px;\">type</th>\n        <th style=\"width: 50px;\">default</th>\n        <th>description</th>\n    </tr>\n    </thead>\n    <tbody>\n        <tr>\n          <td>prefixCls</td>\n          <td>String</td>\n          <td></td>\n          <td>prefixCls of this component</td>\n        </tr>\n        <tr>\n          <td>Select</td>\n          <td>React Component Class</td>\n          <td></td>\n          <td>rc-select Component Class</td>\n        </tr>\n        <tr>\n          <td>value</td>\n          <td>moment</td>\n          <td></td>\n          <td>current value like input's value</td>\n        </tr>\n        <tr>\n          <td>defaultValue</td>\n          <td>moment</td>\n          <td></td>\n          <td>defaultValue like input's defaultValue</td>\n        </tr>\n        <tr>\n          <td>defaultType</td>\n          <td>string</td>\n          <td>date</td>\n          <td>default panel type: date/month</td>\n        </tr>\n        <tr>\n          <td>type</td>\n          <td>string</td>\n          <td></td>\n          <td>panel type: date/month</td>\n        </tr>\n        <tr>\n          <td>onTypeChange</td>\n          <td>function(type)</td>\n          <td></td>\n          <td>called when panel type change</td>\n        </tr>\n        <tr>\n          <td>fullscreen</td>\n          <td>bool</td>\n          <td>false</td>\n          <td></td>\n        </tr>\n        <tr>\n          <td>monthCellRender</td>\n          <td>function</td>\n          <td></td>\n          <td>Custom month cell render method</td>\n        </tr>\n        <tr>\n          <td>dateCellRender</td>\n          <td>function</td>\n          <td></td>\n          <td>Custom date cell render method</td>\n        </tr>\n        <tr>\n          <td>monthCellContentRender</td>\n          <td>function</td>\n          <td></td>\n          <td>Custom month cell content render method,the content will be appended to the cell.</td>\n        </tr>\n        <tr>\n          <td>dateCellContentRender</td>\n          <td>function</td>\n          <td></td>\n          <td>Custom date cell content render method,the content will be appended to the cell.</td>\n        </tr>        <tr>\n          <td>onSelect</td>\n          <td>Function(date: moment)</td>\n          <td></td>\n          <td>called when a date is selected from calendar</td>\n        </tr>\n    </tbody>\n</table>\n\n## Test Case\n\n```\nnpm test\nnpm run chrome-test\n```\n\n## Coverage\n\n```\nnpm run coverage\n```\n\nopen coverage/ dir\n\n## License\n\nrc-calendar is released under the MIT license.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/react-component/calendar.git"
  },
  "scripts": {
    "build": "rc-tools run build",
    "compile": "rc-tools run compile --babel-runtime",
    "coverage": "jest --coverage && cat ./coverage/lcov.info | coveralls",
    "gh-pages": "rc-tools run gh-pages",
    "lint": "rc-tools run lint",
    "pub": "rc-tools run pub --babel-runtime",
    "start": "rc-tools run server",
    "test": "jest"
  },
  "version": "9.0.4"
}
