{
  "_args": [
    [
      {
        "raw": "react-lazy-load@^3.0.12",
        "scope": null,
        "escapedName": "react-lazy-load",
        "name": "react-lazy-load",
        "rawSpec": "^3.0.12",
        "spec": ">=3.0.12 <4.0.0",
        "type": "range"
      },
      "F:\\React\\react-node.js-mongidb\\node_modules\\antd"
    ]
  ],
  "_from": "react-lazy-load@>=3.0.12 <4.0.0",
  "_id": "react-lazy-load@3.0.13",
  "_inCache": true,
  "_location": "/react-lazy-load",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/react-lazy-load-3.0.13.tgz_1512059211852_0.7085243731271476"
  },
  "_npmUser": {
    "name": "sergeylaptev",
    "email": "iamsergeylaptev@gmail.com"
  },
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-lazy-load@^3.0.12",
    "scope": null,
    "escapedName": "react-lazy-load",
    "name": "react-lazy-load",
    "rawSpec": "^3.0.12",
    "spec": ">=3.0.12 <4.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/antd"
  ],
  "_resolved": "https://registry.npmjs.org/react-lazy-load/-/react-lazy-load-3.0.13.tgz",
  "_shasum": "3b0a92d336d43d3f0d73cbe6f35b17050b08b824",
  "_shrinkwrap": null,
  "_spec": "react-lazy-load@^3.0.12",
  "_where": "F:\\React\\react-node.js-mongidb\\node_modules\\antd",
  "author": {
    "name": "Jason Brown",
    "email": "loktar00@gmail.com",
    "url": "https://twitter.com/loktar00"
  },
  "bugs": {
    "url": "https://github.com/loktar00/react-lazy-load/issues"
  },
  "contributors": [
    {
      "name": "Sergey Laptev",
      "email": "iamsergeylaptev@gmail.com",
      "url": "https://twitter.com/iamsergeylaptev"
    }
  ],
  "dependencies": {
    "eventlistener": "0.0.1",
    "lodash.debounce": "^4.0.0",
    "lodash.throttle": "^4.0.0",
    "prop-types": "^15.5.8"
  },
  "description": "Simple lazy loading component built with react",
  "devDependencies": {
    "babel-cli": "^6.3.17",
    "babel-core": "^6.2.1",
    "babel-eslint": "^4.1.5",
    "babel-jest": "^12.0.2",
    "babel-loader": "^6.2.0",
    "babel-preset-es2015": "^6.1.18",
    "babel-preset-react": "^6.1.18",
    "babel-preset-stage-0": "^6.1.18",
    "eslint": "^1.8.0",
    "eslint-config-airbnb": "^0.1.0",
    "eslint-plugin-react": "^3.7.1",
    "jest-cli": "^12.0.2",
    "react": "^0.14.8",
    "react-addons-test-utils": "^0.14.8",
    "react-dom": "^0.14.8",
    "rimraf": "^2.4.4",
    "webpack": "^1.12.2"
  },
  "directories": {},
  "dist": {
    "shasum": "3b0a92d336d43d3f0d73cbe6f35b17050b08b824",
    "tarball": "https://registry.npmjs.org/react-lazy-load/-/react-lazy-load-3.0.13.tgz"
  },
  "files": [
    "dist",
    "lib"
  ],
  "homepage": "https://github.com/loktar00/react-lazy-load#readme",
  "jest": {
    "unmockedModulePathPatterns": [
      "<rootDir>/node_modules/react/",
      "<rootDir>/node_modules/react-dom/",
      "<rootDir>/node_modules/react-addons-test-utils/"
    ]
  },
  "keywords": [
    "react",
    "reactjs",
    "react-component",
    "load",
    "lazy"
  ],
  "license": "MIT",
  "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2015 Jason\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n",
  "main": "./lib/LazyLoad.js",
  "maintainers": [
    {
      "name": "loktar",
      "email": "loktar00@gmail.com"
    },
    {
      "name": "sergeylaptev",
      "email": "iamsergeylaptev@gmail.com"
    }
  ],
  "name": "react-lazy-load",
  "optionalDependencies": {},
  "peerDependencies": {
    "react": "^0.14.0 || ^15.0.0-0 || ^16.0.0",
    "react-dom": "^0.14.0 || ^15.0.0-0 || ^16.0.0"
  },
  "readme": "React Lazy Load Component\n=========================\n\nReact Lazy Load is easy to use React component which helps you defer loading content in predictable way. It's fast, works in IE8+, 6KB minified and uses debounce function by default. You can also use component inside scrolling container, such as div with scrollbar. It will be found automatically. Check out an example.\n\n[![build status](https://img.shields.io/travis/loktar00/react-lazy-load.svg?style=flat-square)](https://travis-ci.org/loktar00/react-lazy-load)\n[![dependency status](https://david-dm.org/loktar00/react-lazy-load.svg?style=flat-square)](https://david-dm.org/loktar00/react-lazy-load)\n[![npm downloads](https://img.shields.io/npm/dm/react-lazy-load.svg?style=flat-square)](https://www.npmjs.com/package/react-lazy-load)\n\n## Installation\nReact Lazy Load requires **React 0.14 or later.**\n\n```\nnpm install --save react-lazy-load\n```\n\n## Examples\n* [Basic](https://github.com/loktar00/react-lazy-load/tree/master/examples/basic)\n\n## Usage\n\n```jsx\nimport React from 'react';\nimport LazyLoad from 'react-lazy-load';\n\nconst MyComponent = () => (\n  <div>\n    Scroll to load images.\n    <div className=\"filler\" />\n    <LazyLoad height={762} offsetVertical={300}>\n      <img src='http://apod.nasa.gov/apod/image/1502/HDR_MVMQ20Feb2015ouellet1024.jpg' />\n    </LazyLoad>\n    <div className=\"filler\" />\n    <LazyLoad height={683} offsetTop={200}>\n      <img src='http://apod.nasa.gov/apod/image/1502/2015_02_20_conj_bourque1024.jpg' />\n    </LazyLoad>\n    <div className=\"filler\" />\n    <LazyLoad height={480} offsetHorizontal={50}>\n      <img src='http://apod.nasa.gov/apod/image/1502/MarsPlume_jaeschke_480.gif' />\n    </LazyLoad>\n    <div className=\"filler\" />\n    <LazyLoad\n      height={720}\n      onContentVisible={() => console.log('look ma I have been lazyloaded!')}\n    >\n      <img src='http://apod.nasa.gov/apod/image/1502/ToadSky_Lane_1080_annotated.jpg' />\n    </LazyLoad>\n    <div className=\"filler\" />\n  </div>\n);\n```\n\n## Props\n\n#### offset\nType: `Number|String` Default: `0`\n\nAliases: `threshold`\n\nThe `offset` option allows you to specify how far below, above, to the left, and to the right of the viewport you want to _begin_ displaying your content. If you specify `0`, your content will be displayed as soon as it is visible in the viewport, if you want to load _1000px_ below or above the viewport, use `1000`.\n\n#### offsetVertical\nType: `Number|String` Default: `offset`'s value\n\nThe `offsetVertical` option allows you to specify how far above and below the viewport you want to _begin_ displaying your content.\n\n#### offsetHorizontal\nType: `Number|String` Default: `offset`'s value\n\nThe `offsetHorizontal` option allows you to specify how far to the left and right of the viewport you want to _begin_ displaying your contet.\n\n#### offsetTop\nType: `Number|String` Default: `offsetVertical`'s value\n\nThe `offsetTop` option allows you to specify how far above the viewport you want to _begin_ displaying your content.\n\n#### offsetBottom\nType: `Number|String` Default: `offsetVertical`'s value\n\nThe `offsetBottom` option allows you to specify how far below the viewport you want to _begin_ displaying your content.\n\n#### offsetLeft\nType: `Number|String` Default: `offsetVertical`'s value\n\nThe `offsetLeft` option allows you to specify how far to left of the viewport you want to _begin_ displaying your content.\n\n#### offsetRight\nType: `Number|String` Default: `offsetVertical`'s value\n\nThe `offsetRight` option allows you to specify how far to the right of the viewport you want to _begin_ displaying your content.\n\n#### throttle\nType: `Number|String` Default: `250`\n\nThe throttle is managed by an internal function that prevents performance issues from continuous firing of `scroll` events. Using a throttle will set a small timeout when the user scrolls and will keep throttling until the user stops. The default is `250` milliseconds.\n\n#### debounce\nType: `Boolean` Default: `true`\n\nBy default the throttling function is actually a [debounce](https://lodash.com/docs#debounce) function so that the checking function is only triggered after a user stops scrolling. To use traditional throttling where it will only check the loadable content every `throttle` milliseconds, set `debounce` to `false`.\n\n#### height\nType: `String|Number`\n\nThe `height` option allows you to set the element's height even when it has no content.\n\n#### width\nType: `String|Number`\n\nThe `width` option allows you to set the element's width even when it has no content.\n\n#### onContentVisible\nType `Function`\n\nA callback function to execute when the content appears on the screen.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/loktar00/react-lazy-load.git"
  },
  "scripts": {
    "build": "npm run build:lib && npm run build:umd && npm run build:umd:min",
    "build:lib": "babel src --out-dir lib",
    "build:umd": "webpack src/LazyLoad.jsx dist/LazyLoad.js --config webpack.config.development.js",
    "build:umd:min": "webpack src/LazyLoad.jsx dist/LazyLoad.min.js --config webpack.config.production.js",
    "clean": "rimraf lib dist",
    "lint": "eslint src/LazyLoad.jsx",
    "prepublish": "npm run clean && npm run build",
    "test": "jest"
  },
  "version": "3.0.13"
}
