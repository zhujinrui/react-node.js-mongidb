{
  "_args": [
    [
      {
        "raw": "enquire.js@^2.1.6",
        "scope": null,
        "escapedName": "enquire.js",
        "name": "enquire.js",
        "rawSpec": "^2.1.6",
        "spec": ">=2.1.6 <3.0.0",
        "type": "range"
      },
      "F:\\React\\react-node.js-mongidb\\node_modules\\react-slick"
    ]
  ],
  "_from": "enquire.js@>=2.1.6 <3.0.0",
  "_id": "enquire.js@2.1.6",
  "_inCache": true,
  "_location": "/enquire.js",
  "_nodeVersion": "6.2.1",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/enquire.js-2.1.6.tgz_1489491896231_0.34977389965206385"
  },
  "_npmUser": {
    "name": "wickynilliams",
    "email": "wickynilliams@gmail.com"
  },
  "_npmVersion": "3.10.8",
  "_phantomChildren": {},
  "_requested": {
    "raw": "enquire.js@^2.1.6",
    "scope": null,
    "escapedName": "enquire.js",
    "name": "enquire.js",
    "rawSpec": "^2.1.6",
    "spec": ">=2.1.6 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/react-slick"
  ],
  "_resolved": "https://registry.npmjs.org/enquire.js/-/enquire.js-2.1.6.tgz",
  "_shasum": "3e8780c9b8b835084c3f60e166dbc3c2a3c89814",
  "_shrinkwrap": null,
  "_spec": "enquire.js@^2.1.6",
  "_where": "F:\\React\\react-node.js-mongidb\\node_modules\\react-slick",
  "author": {
    "name": "Nick Williams",
    "url": "http://wicky.nillia.ms"
  },
  "bugs": {
    "url": "https://github.com/WickyNilliams/enquire.js/issues"
  },
  "dependencies": {},
  "description": "Awesome Media Queries in JavaScript",
  "devDependencies": {
    "bundle-collapser": "^1.2.1",
    "grunt": "^1.0.1",
    "grunt-browserify": "^5.0.0",
    "grunt-contrib-jshint": "^1.1.0",
    "grunt-contrib-uglify": "^2.2.0",
    "grunt-contrib-watch": "^1.0.0",
    "grunt-karma": "^2.0.0",
    "jasmine-core": "^2.5.2",
    "jshint-stylish": "^2.2.1",
    "karma": "^1.5.0",
    "karma-browserify": "^5.1.1",
    "karma-jasmine": "^1.1.0",
    "karma-phantomjs-launcher": "^1.0.2"
  },
  "directories": {},
  "dist": {
    "shasum": "3e8780c9b8b835084c3f60e166dbc3c2a3c89814",
    "tarball": "https://registry.npmjs.org/enquire.js/-/enquire.js-2.1.6.tgz"
  },
  "files": [
    "src",
    "dist"
  ],
  "gitHead": "2f339f1e29b2b6676f541e64b770635075af494d",
  "homepage": "http://wicky.nillia.ms/enquire.js",
  "keywords": [
    "media query",
    "media queries",
    "matchMedia",
    "enquire",
    "enquire.js"
  ],
  "license": "MIT",
  "main": "./src",
  "maintainers": [
    {
      "name": "wickynilliams",
      "email": "wickynilliams@gmail.com"
    }
  ],
  "name": "enquire.js",
  "optionalDependencies": {},
  "readme": "# [enquire.js](http://wickynilliams.github.com/enquire.js/) - Awesome Media Queries in JavaScript\n\n[![Build Status](https://travis-ci.org/WickyNilliams/enquire.js.svg)](https://travis-ci.org/WickyNilliams/enquire.js)\n\n`enquire.js` is a lightweight, pure javascript library (with **no dependencies**) for programmatically responding to media queries.\n\n## Getting enquire.js\n\n### Download\n\nGet the latest build, ready to go:\n\n * [Development](https://github.com/WickyNilliams/enquire.js/raw/master/dist/enquire.js) - unminified\n * [Production](https://github.com/WickyNilliams/enquire.js/raw/master/dist/enquire.min.js) - minified\n\n### Install via Bower\n\nTo install via bower, enter the following at the command line:\n\n    bower install enquire\n\n### Install via npm\n\nTo install via npm, enter the following at the command line:\n\n    npm install enquire.js\n\n### Build From Source\n\nIf you want build from source (and run all unit tests etc):\n\n    git clone git://github.com/WickyNilliams/enquire.js.git\n    cd enquire.js\n    npm install\n    grunt\n\nBooya!\n\n## Quick Start\n\nThe main method you will be dealing with is `register`. It's basic signature is as follows:\n\n```javascript\nenquire.register(query /* string */, handler /* object || array  || function */);\n```\n\n`query` is the CSS media query you wish to respond to, and `handler` is an object containing any logic to handle the query. An example of usage is as follows:\n\n```javascript\nenquire.register(\"screen and (max-width:1000px)\", {\n\n    match : function() {},      // OPTIONAL\n                                // If supplied, triggered when the media query transitions\n                                // *from an unmatched to a matched state*\n\n    unmatch : function() {},    // OPTIONAL\n                                // If supplied, triggered when the media query transitions\n                                // *from a matched state to an unmatched state*.\n                                // Also may be called when handler is unregistered (if destroy is not available)\n\n    setup : function() {},      // OPTIONAL\n                                // If supplied, triggered once immediately upon registration of the handler\n\n    destroy : function() {},    // OPTIONAL\n                                // If supplied, triggered when handler is unregistered. Place cleanup code here\n\n    deferSetup : true           // OPTIONAL, defaults to false\n                                // If set to true, defers execution the setup function\n                                // until the media query is first matched. still triggered just once\n});\n```\n\nThis should be enough to get you going, but **please read the full [enquire.js documentation](http://wickynilliams.github.com/enquire.js/)** if you wish to learn about the other cool features.\n\n## Contributing\n\n* Got an awesome idea?\n* Found a *not-so*-awesome bug?\n* Wish to get my attention through an inappropriate communication channel?!\n\nThen please don't hesitate to raise an issue, they will *all* be looked at and tended to.\n\nAnd for all the cool cats who are prepared to give their time to contribute code, feel free to open a pull request. If you could write unit tests to accompany your pull request that would be pretty sweet, but no worries if not - if it's good enough to be merged in, it's good enough for me to spend a little time to write tests on your behalf :-)\n\n## License\n\nLicense: MIT (http://www.opensource.org/licenses/mit-license.php)\n\n\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/WickyNilliams/enquire.js.git"
  },
  "scripts": {
    "postversion": "git push origin master --tags && npm publish",
    "preversion": "npm test",
    "start": "grunt",
    "test": "grunt test",
    "version": "grunt build && git add ."
  },
  "version": "2.1.6"
}
